<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.course.server.mapper.StudentMapper">
  <resultMap id="BaseResultMap" type="com.course.server.domain.Student">
    <id column="id" jdbcType="CHAR" property="id" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="student_number" jdbcType="VARCHAR" property="studentNumber" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="school_system" jdbcType="INTEGER" property="schoolSystem" />
    <result column="final_exam" jdbcType="DECIMAL" property="finalExam" />
    <result column="usual_grade" jdbcType="DECIMAL" property="usualGrade" />
    <result column="unit_test" jdbcType="DECIMAL" property="unitTest" />
    <result column="class_behave" jdbcType="DECIMAL" property="classBehave" />
    <result column="final_exam_avg" jdbcType="DECIMAL" property="finalExamAvg" />
    <result column="usual_grade_avg" jdbcType="DECIMAL" property="usualGradeAvg" />
    <result column="unit_test_avg" jdbcType="DECIMAL" property="unitTestAvg" />
    <result column="class_behave_avg" jdbcType="DECIMAL" property="classBehaveAvg" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, class_name, student_number, `name`, gender, school_system, final_exam, usual_grade, 
    unit_test, class_behave, final_exam_avg, usual_grade_avg, unit_test_avg, class_behave_avg
  </sql>
  <select id="selectByExample" parameterType="com.course.server.domain.StudentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=CHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from student
    where id = #{id,jdbcType=CHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.course.server.domain.StudentExample">
    delete from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.course.server.domain.Student">
    insert into student (id, class_name, student_number, 
      `name`, gender, school_system, 
      final_exam, usual_grade, unit_test, 
      class_behave, final_exam_avg, usual_grade_avg, 
      unit_test_avg, class_behave_avg)
    values (#{id,jdbcType=CHAR}, #{className,jdbcType=VARCHAR}, #{studentNumber,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{schoolSystem,jdbcType=INTEGER}, 
      #{finalExam,jdbcType=DECIMAL}, #{usualGrade,jdbcType=DECIMAL}, #{unitTest,jdbcType=DECIMAL}, 
      #{classBehave,jdbcType=DECIMAL}, #{finalExamAvg,jdbcType=DECIMAL}, #{usualGradeAvg,jdbcType=DECIMAL}, 
      #{unitTestAvg,jdbcType=DECIMAL}, #{classBehaveAvg,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.course.server.domain.Student">
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="studentNumber != null">
        student_number,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="gender != null">
        gender,
      </if>
      <if test="schoolSystem != null">
        school_system,
      </if>
      <if test="finalExam != null">
        final_exam,
      </if>
      <if test="usualGrade != null">
        usual_grade,
      </if>
      <if test="unitTest != null">
        unit_test,
      </if>
      <if test="classBehave != null">
        class_behave,
      </if>
      <if test="finalExamAvg != null">
        final_exam_avg,
      </if>
      <if test="usualGradeAvg != null">
        usual_grade_avg,
      </if>
      <if test="unitTestAvg != null">
        unit_test_avg,
      </if>
      <if test="classBehaveAvg != null">
        class_behave_avg,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=CHAR},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="studentNumber != null">
        #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        #{gender,jdbcType=CHAR},
      </if>
      <if test="schoolSystem != null">
        #{schoolSystem,jdbcType=INTEGER},
      </if>
      <if test="finalExam != null">
        #{finalExam,jdbcType=DECIMAL},
      </if>
      <if test="usualGrade != null">
        #{usualGrade,jdbcType=DECIMAL},
      </if>
      <if test="unitTest != null">
        #{unitTest,jdbcType=DECIMAL},
      </if>
      <if test="classBehave != null">
        #{classBehave,jdbcType=DECIMAL},
      </if>
      <if test="finalExamAvg != null">
        #{finalExamAvg,jdbcType=DECIMAL},
      </if>
      <if test="usualGradeAvg != null">
        #{usualGradeAvg,jdbcType=DECIMAL},
      </if>
      <if test="unitTestAvg != null">
        #{unitTestAvg,jdbcType=DECIMAL},
      </if>
      <if test="classBehaveAvg != null">
        #{classBehaveAvg,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.course.server.domain.StudentExample" resultType="java.lang.Long">
    select count(*) from student
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update student
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=CHAR},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.studentNumber != null">
        student_number = #{record.studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null">
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.schoolSystem != null">
        school_system = #{record.schoolSystem,jdbcType=INTEGER},
      </if>
      <if test="record.finalExam != null">
        final_exam = #{record.finalExam,jdbcType=DECIMAL},
      </if>
      <if test="record.usualGrade != null">
        usual_grade = #{record.usualGrade,jdbcType=DECIMAL},
      </if>
      <if test="record.unitTest != null">
        unit_test = #{record.unitTest,jdbcType=DECIMAL},
      </if>
      <if test="record.classBehave != null">
        class_behave = #{record.classBehave,jdbcType=DECIMAL},
      </if>
      <if test="record.finalExamAvg != null">
        final_exam_avg = #{record.finalExamAvg,jdbcType=DECIMAL},
      </if>
      <if test="record.usualGradeAvg != null">
        usual_grade_avg = #{record.usualGradeAvg,jdbcType=DECIMAL},
      </if>
      <if test="record.unitTestAvg != null">
        unit_test_avg = #{record.unitTestAvg,jdbcType=DECIMAL},
      </if>
      <if test="record.classBehaveAvg != null">
        class_behave_avg = #{record.classBehaveAvg,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update student
    set id = #{record.id,jdbcType=CHAR},
      class_name = #{record.className,jdbcType=VARCHAR},
      student_number = #{record.studentNumber,jdbcType=VARCHAR},
      `name` = #{record.name,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      school_system = #{record.schoolSystem,jdbcType=INTEGER},
      final_exam = #{record.finalExam,jdbcType=DECIMAL},
      usual_grade = #{record.usualGrade,jdbcType=DECIMAL},
      unit_test = #{record.unitTest,jdbcType=DECIMAL},
      class_behave = #{record.classBehave,jdbcType=DECIMAL},
      final_exam_avg = #{record.finalExamAvg,jdbcType=DECIMAL},
      usual_grade_avg = #{record.usualGradeAvg,jdbcType=DECIMAL},
      unit_test_avg = #{record.unitTestAvg,jdbcType=DECIMAL},
      class_behave_avg = #{record.classBehaveAvg,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.course.server.domain.Student">
    update student
    <set>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="studentNumber != null">
        student_number = #{studentNumber,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="gender != null">
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="schoolSystem != null">
        school_system = #{schoolSystem,jdbcType=INTEGER},
      </if>
      <if test="finalExam != null">
        final_exam = #{finalExam,jdbcType=DECIMAL},
      </if>
      <if test="usualGrade != null">
        usual_grade = #{usualGrade,jdbcType=DECIMAL},
      </if>
      <if test="unitTest != null">
        unit_test = #{unitTest,jdbcType=DECIMAL},
      </if>
      <if test="classBehave != null">
        class_behave = #{classBehave,jdbcType=DECIMAL},
      </if>
      <if test="finalExamAvg != null">
        final_exam_avg = #{finalExamAvg,jdbcType=DECIMAL},
      </if>
      <if test="usualGradeAvg != null">
        usual_grade_avg = #{usualGradeAvg,jdbcType=DECIMAL},
      </if>
      <if test="unitTestAvg != null">
        unit_test_avg = #{unitTestAvg,jdbcType=DECIMAL},
      </if>
      <if test="classBehaveAvg != null">
        class_behave_avg = #{classBehaveAvg,jdbcType=DECIMAL},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.course.server.domain.Student">
    update student
    set class_name = #{className,jdbcType=VARCHAR},
      student_number = #{studentNumber,jdbcType=VARCHAR},
      `name` = #{name,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      school_system = #{schoolSystem,jdbcType=INTEGER},
      final_exam = #{finalExam,jdbcType=DECIMAL},
      usual_grade = #{usualGrade,jdbcType=DECIMAL},
      unit_test = #{unitTest,jdbcType=DECIMAL},
      class_behave = #{classBehave,jdbcType=DECIMAL},
      final_exam_avg = #{finalExamAvg,jdbcType=DECIMAL},
      usual_grade_avg = #{usualGradeAvg,jdbcType=DECIMAL},
      unit_test_avg = #{unitTestAvg,jdbcType=DECIMAL},
      class_behave_avg = #{classBehaveAvg,jdbcType=DECIMAL}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>